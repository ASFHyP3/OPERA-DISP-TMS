[build-system]
requires = ["setuptools>=61.0", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "opera_disp_tms"
requires-python = ">=3.10"
authors = [
    {name="tools-bot", email="UAF-asf-apd@alaska.edu"},
]
description = "Package for create OPERA-DISP tile map creation"
license = {text = "BSD-3-Clause"}
classifiers=[
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "gdal",
    "boto3>=1.36.0",
    "h5py",
    "s3fs",
    "h5netcdf",
    "rioxarray",
    "xarray",
    "numba",
    "cachetools",
    "numpy",
    "requests",
]
dynamic = ["version", "readme"]

[project.optional-dependencies]
develop = [
    "pytest",
    "pytest-cov",
    "pytest-console-scripts",
]

[project.urls]
Homepage = "https://github.com/ASFHyP3/OPERA-DISP-TMS"
Documentation = "https://github.com/ASFHyP3/opera-disp-tms/tree/develop?tab=readme-ov-file#opera-disp-tms"

[project.scripts]
create_measurement_geotiff = "opera_disp_tms.create_measurement_geotiff:main"
create_tile_map = "opera_disp_tms.create_tile_map:main"

[project.entry-points.hyp3]
create_measurement_geotiff  = "opera_disp_tms.create_measurement_geotiff:main"
create_tile_map  = "opera_disp_tms.create_tile_map:main"

[tool.pytest.ini_options]
addopts = '-ra -m "not integration"'
markers = ["integration"]
testpaths = ["tests"]
script_launch_mode = "subprocess"

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.dynamic]
readme = {file = ["README.md"], content-type = "text/markdown"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]

[tool.ruff]
line-length = 120
# The directories to consider when resolving first- vs. third-party imports.
# See: https://docs.astral.sh/ruff/settings/#src
src = ["src", "tests"]

[tool.ruff.format]
indent-style = "space"
quote-style = "single"

[tool.ruff.lint]
extend-select = [
    "I",   # isort: https://docs.astral.sh/ruff/rules/#isort-i
    # TODO: Uncomment the following extensions and address their warnings:
    # "UP",  # pyupgrade: https://docs.astral.sh/ruff/rules/#pyupgrade-up
    # "D",   # pydocstyle: https://docs.astral.sh/ruff/rules/#pydocstyle-d
    # "ANN", # annotations: https://docs.astral.sh/ruff/rules/#flake8-annotations-ann
    # "PTH", # use-pathlib-pth: https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
case-sensitive = true
lines-after-imports = 2

[tool.ruff.lint.flake8-annotations]
suppress-dummy-args = true

[tool.ruff.lint.extend-per-file-ignores]
"tests/*" = ["D1", "ANN"]

[tool.mypy]
python_version = "3.10"
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true
check_untyped_defs = true
install_types = true
non_interactive = true
pretty = true
disable_error_code = ["import-untyped"]
